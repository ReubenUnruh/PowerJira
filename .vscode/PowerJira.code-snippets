{
	// Place your PowerJira workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Parameter Checker": {
		"scope":"powershell",
		"prefix":"checkparam",
		"body" : [
			"if(\\$PSBoundParameters.ContainsKey(\"${1}\")){\\$$RestArgs.{3}.Add(\"${2}\",\\$${1})}"
		],
		"description": "Snippet for adding an item to a hashtable if a named function parameter is set"
	},
	"KVP Parameter Checker": {
		"scope":"powershell",
		"prefix":"kvpcheckparam",
		"body" : [
			"if(\\$PSBoundParameters.ContainsKey(\"${1}\")){\\$$RestArgs.QueryKvp += Format-QueryKvp \"${2}\" \\$${1}}"
		],
		"description": "Snippet for adding an item to an array of key value pairs if a named function parameter is set"
	},
	"Invoke-Jira cmdlet": {
		"scope":"powershell",
		"prefix":"ijcmdlet",
		"body" : [
			"#",
			"function Invoke-Jira$1 {",
			"\t[CmdletBinding()]",
			"\tparam (\n\n\n",
			"\t\t# The JiraConnection object to use for the request",
			"\t\t[Parameter()]",
			"\t\t[hashtable]",
			"\t\t\\$JiraConnection",
			"\t)",
			"\tprocess {",
			"\t\t\\$functionPath = \"\"",
			"\t\t\\$verb = \"\"\n",
			"\t\t\\$query=@{}",
			"\t\t\\$body=@{}\n",
			"\t\tInvoke-JiraRestMethod \\$JiraConnection \\$functionPath \\$verb -Query \\$query -Body \\$body",
			"\t}",
			"}",
		],
		"description": "Snippet for templating a new Invoke-Jira* API wrapper"
	},
	"breakpoint": {
		"scope":"powershell",
		"prefix": "breakpoint",
		"body": [
			"Read-Host -Prompt \"Press any key to continue or CTRL+C to quit\""
		],
		"description": "Insert a breakpoint"
	},
	"Default PowerJira begin clause": {
		"scope":"powershell",
		"prefix": "jbegin",
		"body": [
			"begin {",
			"\t\\$results = @()",
			"}"
		],
		"description": "The default cmdlet begin clause for PowerJira cmdlets"
	},
	"Default PowerJira end clause": {
		"scope":"powershell",
		"prefix": "jend",
		"body": [
			"end {",
			"\t\\$results",
			"}"
		],
		"description": "The default cmdlet end clause for PowerJira cmdlets"
	}
}